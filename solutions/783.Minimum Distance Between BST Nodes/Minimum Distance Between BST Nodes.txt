/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int minDiffInBST(TreeNode root) {
        if (root == null) {
            return Integer.MAX_VALUE;
        }
        if(root.left == null && root.right == null){
            return Integer.MAX_VALUE;
        }
        int left = minDiffInBST(root.left);
        int right = minDiffInBST(root.right);
        int current = Math.min(Math.abs(root.val - right(root.left)), Math.abs(left(root.right) - root.val));
        return Math.min(Math.min(left,right),current);
    }

    private int right(TreeNode root) {
        if (root == null) {
            return Integer.MAX_VALUE;
        }
        if (root.right == null) {
            return root.val;
        }
        return right(root.right);
    }

    private int left(TreeNode root) {
        if (root == null) {
            return Integer.MAX_VALUE;
        }
        if (root.left == null) {
            return root.val;
        }
        return left(root.left);
    }
}

/**
 * status: Accepted
 *
 * time: 9 ms
 *
 * memory: 47.8 MB
 */

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode ans = new ListNode(0);
        ListNode header = ans;
        int digit = 0;
        while(l1 != null && l2 != null){
            int tmp = l1.val + l2.val + digit;
            if(tmp > 9){
                digit = 1;
                tmp = tmp - 10;
            }else{
                digit = 0;
            }
            header.next = new ListNode(tmp);
            header = header.next;
            l1 = l1.next;
            l2 = l2.next;
        }
        while(l1 != null){
            int tmp = l1.val + digit;
            if(tmp > 9){
                digit = 1;
                tmp = tmp - 10;
            }else{
                digit = 0;
            }
            header.next = new ListNode(tmp);
            header = header.next;
            l1 = l1.next;
        }
        while(l2 != null){
            int tmp = l2.val + digit;
            if(tmp > 9){
                digit = 1;
                tmp = tmp - 10;
            }else{
                digit = 0;
            }
            header.next = new ListNode(tmp);
            header = header.next;
            l2 = l2.next;
        }
        if(digit != 0){
            header.next = new ListNode(digit);
        }
        return ans.next;
    }
}

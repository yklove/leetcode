/**
 * status: Accepted
 *
 * time: 1 ms
 *
 * memory: 36.8 MB
 */


import java.util.Objects;

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    private boolean process(TreeNode treeNode1, TreeNode treeNode2) {
        if (!treeEquals(treeNode1, treeNode2)) {
            return false;
        }
        if (Objects.isNull(treeNode1) && Objects.isNull(treeNode2)) {
            return true;
        }
        return process(treeNode1.left, treeNode2.right) && process(treeNode1.right, treeNode2.left);
    }

    private boolean treeEquals(TreeNode treeNode1, TreeNode treeNode2) {
        if (Objects.nonNull(treeNode1) && Objects.nonNull(treeNode2)) {
            return Objects.equals(treeNode1.val, treeNode2.val);
        }
        if (Objects.isNull(treeNode1) && Objects.isNull(treeNode2)) {
            return true;
        }
        return false;
    }

    public boolean isSymmetric(TreeNode root) {
        if (null == root) {
            return true;
        }
        return process(root.right, root.left);
    }

}
